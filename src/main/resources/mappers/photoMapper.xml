<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.javaclassS16.dao.PhotoDAO">
    
    <select id="getPhotoList" resultType="com.spring.javaclassS16.vo.PhotoVO">
		  SELECT p.*, IFNULL(r.replyCnt, 0) as replyCnt
		  FROM photo p
		  LEFT JOIN (
		    SELECT photoIdx, COUNT(*) as replyCnt
		    FROM photoReply
		    GROUP BY photoIdx
		  ) r ON p.idx = r.photoIdx
		  WHERE p.familyCode = #{familyCode}
		  <if test="part != '전체'">AND p.part = #{part}</if>
		  ORDER BY
		  <choose>
		    <when test="choice == '추천순'">p.goodCount DESC</when>
		    <when test="choice == '조회순'">p.readNum DESC</when>
		    <otherwise>p.idx DESC</otherwise>
		  </choose>
		  LIMIT #{startIndexNo}, #{pageSize}
		</select>
    
    <select id="getPhotoContent" resultType="com.spring.javaclassS16.vo.PhotoVO">
      SELECT * FROM photo
      WHERE idx = #{idx}
    </select>
    
    <select id="getPhotoReply" resultType="com.spring.javaclassS16.vo.PhotoReplyVO">
      SELECT r.*, m.name FROM photoReply r
      JOIN member m ON r.memberIdx = m.idx
      WHERE r.photoIdx = #{idx} ORDER BY r.idx DESC
    </select>
    
    <select id="getMemberIdxByMid" resultType="com.spring.javaclassS16.vo.MemberVO">
      SELECT * FROM member WHERE mid = #{mid}
    </select>
    
    <insert id="setPhotoInput" parameterType="com.spring.javaclassS16.vo.PhotoVO">
        INSERT INTO photo (memberIdx, name, familyCode, part, title, content, photoCount, thumbnail, pDate)
        VALUES (#{vo.memberIdx}, #{vo.name}, #{vo.familyCode}, #{vo.part}, #{vo.title}, #{vo.content}, #{vo.photoCount}, #{vo.thumbnail}, NOW())
    </insert>
    
    <insert id="setPhotoReplyInput">
      INSERT INTO photoReply (memberIdx, photoIdx, content)
      VALUES (#{vo.memberIdx}, #{vo.photoIdx}, #{vo.content})
    </insert>
    
    <update id="setPhotoReadNumPlus">
      UPDATE photo SET readNum = readNum + 1 WHERE idx = #{idx}
    </update>
    
    <update id="setPhotoGoodCheck">
      UPDATE photo SET goodCount = goodCount + 1 WHERE idx = #{idx}
    </update>
    
    <delete id="setPhotoReplyDelete">
      DELETE FROM photoReply WHERE idx = #{idx}
    </delete>
    
</mapper>