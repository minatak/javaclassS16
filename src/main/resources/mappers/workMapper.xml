<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.javaclassS16.dao.WorkDAO">
  
  <select id="getWorkList" resultType="java.util.Map">
    SELECT 
      idx, category, task, description, familyCode, startDate, endDate, rotationPeriod, 
      memberIdx, memberName, completionDate, status,
      DATEDIFF(endDate, CURDATE()) AS daysLeft
    FROM housework
    WHERE familyCode = #{familyCode}
    <if test="category != null and category != ''">
      AND category = #{category}
    </if>
    <if test="status != null and status != ''">
      AND status = #{status}
    </if>
    <if test="memberFilter != null and memberFilter != ''">
      AND memberIdx = #{memberFilter}
    </if>
    ORDER BY status ASC,
    <choose>
      <when test="sortBy == 'dueDate'">endDate ASC</when>
      <when test="sortBy == 'category'">category ASC</when>
      <otherwise>idx DESC</otherwise>
    </choose>
    LIMIT #{startIndexNo}, #{pageSize}
  </select>
  
  <select id="getMyWorkList" resultType="java.util.Map">
    SELECT 
      idx, category, task, description, familyCode, startDate, endDate, rotationPeriod, 
      memberIdx, memberName, completionDate, status,
      DATEDIFF(endDate, CURDATE()) AS daysLeft
    FROM housework
    WHERE familyCode = #{familyCode} AND memberIdx = #{memberIdx}
    ORDER BY status ASC, idx DESC 
    LIMIT #{startIndexNo}, #{pageSize}
  </select>
  
  <select id="totRecCnt" resultType="int">
    SELECT COUNT(*)
    FROM housework
    WHERE familyCode = #{familyCode}
  </select>
  
  <select id="totRecCntSearch" resultType="int">
    SELECT COUNT(*)
    FROM housework
    WHERE familyCode = #{familyCode}
    <if test="search == 'category'">
      AND category LIKE CONCAT('%', #{searchString}, '%')
    </if>
    <if test="search == 'task'">
      AND task LIKE CONCAT('%', #{searchString}, '%')
    </if>
    <if test="search == 'status'">
      AND status LIKE CONCAT('%', #{searchString}, '%')
    </if>
    <if test="search == 'memberName'">
      AND memberName LIKE CONCAT('%', #{searchString}, '%')
    </if>
  </select>

  <select id="getFamilyMemberProgress" resultType="java.util.Map">
	  SELECT 
	    m.idx AS memberIdx,
	    m.name AS memberName,
	    m.relationship,
	    COALESCE(COUNT(h.idx), 0) AS totalTasks,
	    COALESCE(SUM(CASE WHEN h.status = '완료' THEN 1 ELSE 0 END), 0) AS completedTasks,
	    CASE 
	      WHEN COUNT(h.idx) > 0 THEN 
	        (SUM(CASE WHEN h.status = '완료' THEN 1 ELSE 0 END) * 100.0 / COUNT(h.idx))
	      ELSE 0 
	    END AS progressPercentage
	  FROM member m
	  LEFT JOIN housework h ON m.idx = h.memberIdx AND h.familyCode = #{familyCode}
	  WHERE m.familyCode = #{familyCode}
	  GROUP BY m.idx, m.name, m.relationship
	  ORDER BY m.idx
	</select>
  
  <select id="getDashboardData" resultType="java.util.Map">
    SELECT 
      COUNT(*) AS totalTasks,
      SUM(CASE WHEN status = '완료' THEN 1 ELSE 0 END) AS completedTasks,
      SUM(CASE WHEN status = '진행중' THEN 1 ELSE 0 END) AS ongoingTasks,
      SUM(CASE WHEN DATE(endDate) = CURDATE() THEN 1 ELSE 0 END) AS todayTasks
    FROM housework
    WHERE familyCode = #{familyCode}
  </select>
    
  <select id="getTaskDetails" resultType="com.spring.javaclassS16.vo.WorkVO">
    SELECT *, DATEDIFF(endDate, CURDATE()) AS daysLeft
    FROM housework
    WHERE idx = #{idx}
  </select>
  
  <select id="getTodayHouseworks" resultType="com.spring.javaclassS16.vo.WorkVO">
    SELECT * FROM housework 
    WHERE DATE(endDate) = CURDATE() 
    AND familyCode = #{familyCode}
    ORDER BY idx
  </select>


  <insert id="setWorkInput" >
    INSERT INTO housework (category, task, description, familyCode, endDate, rotationPeriod, memberIdx, memberName)
    VALUES (#{vo.category}, #{vo.task}, #{vo.description}, #{vo.familyCode}, #{vo.endDate}, #{vo.rotationPeriod}, #{vo.memberIdx}, #{vo.memberName})
  </insert>


  <update id="setCompleteTask" parameterType="int">
    UPDATE housework
    SET status = '완료', completionDate = now()
    WHERE idx = #{houseworkIdx}
  </update>
  
  <update id="setWorkUpdate">
    UPDATE housework SET category = #{vo.category}, task = #{vo.task}, description = #{vo.description},
    memberIdx = #{vo.memberIdx}, memberName = #{vo.memberName}, endDate = #{vo.endDate}, rotationPeriod = #{vo.rotationPeriod}, status = #{vo.status}
    WHERE idx = #{vo.idx}
	</update>
	
	
	
	<delete id="setWorkDelete">
		delete from housework where idx = #{idx};
	</delete>
  
</mapper>